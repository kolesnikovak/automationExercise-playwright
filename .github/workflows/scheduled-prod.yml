name: Scheduled Tests - PROD

on:
  schedule:
    # Run every day at 1:00 AM Central Time (6:00 AM UTC) - 7 days a week
    - cron: '0 6 * * *'
  workflow_dispatch: # Allow manual trigger

env:
  ENVIRONMENT: prod

jobs:
  test:
    name: Run Playwright Tests (PROD)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps chromium

      - name: Install Playwright browser dependencies
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: npx playwright install-deps chromium

      - name: Run Playwright tests (smoke and critical only)
        run: npx playwright test tests/acceptance-smoke-critical/
        env:
          BASE_URL: ${{ secrets.PROD_BASE_URL }}
          USERNAME: ${{ secrets.PROD_USERNAME }}
          PASSWORD: ${{ secrets.PROD_PASSWORD }}
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-prod
          path: playwright-report/
          retention-days: 30

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-prod
          path: test-results/
          retention-days: 30

  notify:
    name: Send Notification
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - name: Check test status
        run: |
          if [ "${{ needs.test.result }}" == "success" ]; then
            echo "Tests passed successfully in PROD environment"
          else
            echo "Tests failed in PROD environment"
            exit 1
          fi
